// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'database/models/program.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 3119364600799074910),
      name: 'Program',
      lastPropertyId: const obx_int.IdUid(7, 7283159439374429712),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6230370214028168592),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 5317614990040834380),
            name: 'code',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 4201270655054815008),
            name: 'output',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 3400496009491416727),
            name: 'language',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 6449475629644394779),
            name: 'languageCode',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 539428504097697524),
            name: 'languageCodeIndex',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 7283159439374429712),
            name: 'date',
            type: 10,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(1, 3119364600799074910),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    Program: obx_int.EntityDefinition<Program>(
        model: _entities[0],
        toOneRelations: (Program object) => [],
        toManyRelations: (Program object) => {},
        getId: (Program object) => object.id,
        setId: (Program object, int id) {
          object.id = id;
        },
        objectToFB: (Program object, fb.Builder fbb) {
          final codeOffset =
              object.code == null ? null : fbb.writeString(object.code!);
          final outputOffset =
              object.output == null ? null : fbb.writeString(object.output!);
          final languageOffset = object.language == null
              ? null
              : fbb.writeString(object.language!);
          final languageCodeOffset = object.languageCode == null
              ? null
              : fbb.writeString(object.languageCode!);
          fbb.startTable(8);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, codeOffset);
          fbb.addOffset(2, outputOffset);
          fbb.addOffset(3, languageOffset);
          fbb.addOffset(4, languageCodeOffset);
          fbb.addInt64(5, object.languageCodeIndex);
          fbb.addInt64(6, object.date.millisecondsSinceEpoch);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final codeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 6);
          final outputParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 8);
          final languageParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 10);
          final languageCodeParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 12);
          final languageCodeIndexParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 14);
          final dateParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0));
          final object = Program(
              id: idParam,
              code: codeParam,
              output: outputParam,
              language: languageParam,
              languageCode: languageCodeParam,
              languageCodeIndex: languageCodeIndexParam,
              date: dateParam);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [Program] entity fields to define ObjectBox queries.
class Program_ {
  /// See [Program.id].
  static final id =
      obx.QueryIntegerProperty<Program>(_entities[0].properties[0]);

  /// See [Program.code].
  static final code =
      obx.QueryStringProperty<Program>(_entities[0].properties[1]);

  /// See [Program.output].
  static final output =
      obx.QueryStringProperty<Program>(_entities[0].properties[2]);

  /// See [Program.language].
  static final language =
      obx.QueryStringProperty<Program>(_entities[0].properties[3]);

  /// See [Program.languageCode].
  static final languageCode =
      obx.QueryStringProperty<Program>(_entities[0].properties[4]);

  /// See [Program.languageCodeIndex].
  static final languageCodeIndex =
      obx.QueryIntegerProperty<Program>(_entities[0].properties[5]);

  /// See [Program.date].
  static final date =
      obx.QueryDateProperty<Program>(_entities[0].properties[6]);
}
